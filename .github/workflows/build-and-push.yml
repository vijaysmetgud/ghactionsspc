name: Build and Push Spring PetClinic Docker Image to ECR

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select deployment environment'
        required: true
        default: 'uat'
        type: choice
        options:
          - dev
          - uat
          - prod

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      id-token: write  # Required for OIDC
      contents: read

    env:
      AWS_REGION: ca-central-1
      DOCKERFILE_PATH: ./Dockerfile

    steps:
      # 1️⃣ Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Configure AWS credentials via OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::745487377768:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}

      # 3️⃣ Login to Amazon ECR
      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      # 4️⃣ Set environment and image tag, select ECR repository
      - name: Set environment variables
        run: |
          ENVIRONMENT="${{ github.event.inputs.environment }}"
          echo "APP_ENV=$ENVIRONMENT" >> $GITHUB_ENV
          echo "IMAGE_TAG=$ENVIRONMENT-${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "ECR_REGISTRY=${{ steps.ecr-login.outputs.registry }}" >> $GITHUB_ENV

          # Select the correct ECR repository based on environment
          if [ "$ENVIRONMENT" == "prod" ]; then
            ECR_REPOSITORY="spring-petclinic-prod"
          elif [ "$ENVIRONMENT" == "uat" ]; then
            ECR_REPOSITORY="spring-petclinic-uat"
          else
            ECR_REPOSITORY="spring-petclinic-dev"
          fi
          echo "ECR_REPOSITORY=$ECR_REPOSITORY" >> $GITHUB_ENV

      # 5️⃣ Make Maven wrapper executable
      - name: Make mvnw executable
        run: chmod +x ./mvnw

      # 6️⃣ Build Spring Boot JAR
      - name: Build Spring Boot JAR
        run: ./mvnw clean package -DskipTests

      # 7️⃣ Build Docker image
      - name: Build Docker image
        run: |
          docker build \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            -f ${{ env.DOCKERFILE_PATH }} .

      # 8️⃣ Push Docker image to ECR
      - name: Push Docker image
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # 9️⃣ Output deployed image info
      - name: Output deployed image info
        run: |
          echo "✅ Docker image pushed: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
